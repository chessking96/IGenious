1. VMWare Virtual Machine - Ubuntu 20.04 - Standard Settings - Easy Install -  30 GB capacity
2. sudo apt-get install python-dev -y && sudo apt install libncurses5 -y
3. sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 20
4. sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 20
5. sudo update-alternatives --config python
6. 1
7. sudo apt-get -y update
8. sudo apt-get install dialog apt-utils -y
9. sudo apt-get install build-essential -y
10. sudo apt-get install git -y
11. sudo apt-get install vim -y
12. sudo apt-get install software-properties-common -y
13. echo "deb http://old-releases.ubuntu.com/ubuntu saucy main" | sudo tee /etc/apt/sources.list.d/saucy.list
14. sudo apt-add-repository -r universe
15. sudo apt update
16. sudo apt install gcc-4.8 -y
17. sudo apt install g++-4.8 -y
18. sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 10
19. sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20
20. sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 10
21. sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 20
22. sudo update-alternatives --config gcc
23. 1
24. sudo update-alternatives --config g++
25. 1
26. cd $HOME && \
    wget http://llvm.org/releases/3.0/clang+llvm-3.0-x86_64-linux-Ubuntu-11_10.tar.gz && \
    tar -xzvf clang+llvm-3.0-x86_64-linux-Ubuntu-11_10.tar.gz && \
    mv clang+llvm-3.0-x86_64-linux-Ubuntu-11_10 llvm-3.0 && \
    rm -f clang+llvm-3.0-x86_64-linux-Ubuntu-11_10.tar.gz
27. wget http://releases.llvm.org/3.8.0/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz && \
    tar -xvf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz && \
    mv clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04 llvm-3.8 && \
    rm -f clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz
28. echo "export LLVM_VERSION=llvm-3.0" >> ~/.bashrc && \
    echo "export PATH=$HOME/\$LLVM_VERSION/bin:$PATH" >> ~/.bashrc && \
    echo "export LD_LIBRARY_PATH=$HOME/\$LLVM_VERSION/lib:$LD_LIBRARY_PATH" >> ~/.bashrc && \
    echo "export CPATH=$HOME/\$LLVM_VERSION/include:." >> ~/.bashrc && \
    echo "export LLVM_COMPILER=clang" >> ~/.bashrc
29. . ~/.bashrc
30. cd && \
    wget -qnc http://prdownloads.sourceforge.net/scons/scons-2.4.0.tar.gz && \
    tar xzvf scons-2.4.0.tar.gz && \
    rm -f scons-2.4.0.tar.gz && \
    mv scons-2.4.0 scons && \
    cd scons && \
    sudo python2.7 setup.py install && \
    cd ..
31. cd && \
    git clone https://github.com/ucd-plse/precimonious.git && \
    cd precimonious && \
    echo "export CORVETTE_PATH=$HOME/precimonious" >> ~/.bashrc && \
    cd ..
32. . ~/.bashrc
33. cd $HOME/precimonious/src && \
    sed -i "s/SHLINKFLAGS='-Wl',/SHLINKFLAGS='',/g" SConscript && \
    sed -i "s/LIBS='LLVM-\$llvm_version'/#LIBS='LLVM-\$llvm_version'/g" SConscript && \
    echo $PATH && \
    printenv && \
    scons -Uc && \
    scons -U && \
    scons -U test
34. sudo apt-get install curl -y
35. curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
36. sudo python2 get-pip.py
37. sudo apt-get install -y libgraphviz-dev
38. python -m pip install -U matplotlib
39. pip install 'networkx==2.2' && \
    pip install python-louvain && \
    pip install graphviz && \
    pip install pygraphviz
40. sudo apt-get install -y bc
41. cd && git clone https://github.com/ucd-plse/HiFPTuner.git && \
    echo "export HIFPTUNER_PATH=$HOME/HiFPTuner" >> ~/.bashrc && \
    echo "export HIFP_PRECI=$HOME/HiFPTuner/precimonious" >> ~/.bashrc && \
    echo "export LD_LIBRARY_PATH=\$HIFP_PRECI/logging:\$LD_LIBRARY_PATH" >> ~/.bashrc && \
    echo "export LIBRARY_PATH=\$HIFP_PRECI/logging" >> ~/.bashrc
42. . ~/.bashrc
43. cd $HOME/HiFPTuner/precimonious/logging && \
    make clean; make
44. switch to llvm3.8
45. cd $HOME/HiFPTuner/src/varDeps && \
    make clean; make












